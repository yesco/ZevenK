## the normal keys

# these are themselves
#a
#s
#d
#f
#g

# qwert - roll up
A>S	q
S>D	w
D>F	e
F>G	r
G>A	t

# zxcvb = roll down
G>F	b
F>D	v
D>S	c
S>A	x
A>G	z

# mirror to other half
# (hold space tap key, release space)
_-A	:BS # stolen!
_-S	l
_-D	k
_-F	j
_-G	h

# mirror left
# TODO: how to interpret q?
_-q	p
_-w	o
_-e	i
_-r	u
_-tg	y

_-z	/
_-x	:DELSPC._
_-c	:DELSPC,_
_-v	m
_-b	n

# poiuy - roll up
_-A>S	p
_-S>D	o
_-D>F	i
_-F>G	u
_-FG	u # oker can't handle it w spc!
_-G>A	y

# zxcvb = roll down
_-G>F	n
_-GF	n # oker can't handle it w spc!
_-F>D	m
_-D>S	,
_-S>A	.
_-A>G	/

## alternative roll-up-down
# maybe easier?
_>A	q
_>S	w
_>D	e
_>F	r
_>G	t

A>_	z
S>_	x
D>_	c
F>_	v
G>_	b

# mirror
# (this may be icky?)
# think: roll up/down & roll right side
# poiuy is upper row SPC-KEY is up
# /.,mn is lower row KEY-SPACE is down

# Basically type 'c', by using mirrored
# finger 'a', then push down space
# (to go lower row), then relase 'a',
# and slap it to the side with bounce
# back to a. (haha!)

_>A>_	p
_>S>_	o
_>D>_	i
_>F>_	u
_>G>_	y

A>_>A	' # no formatting
S>_>S	: # no formatting
D>_>D	k
F>_>F	j
G>_>G	h

_-A_	p
_-S_	o
_-D_	i
_-F_	u
_-G_	y

A-_A	/
S-_S	. # no formatting
D-_D	, # no formatting
F-_F	m
G-_G	n

## numbers
# (using g as numshift key)
G-_	0
G-F	1
G-D	2
G-S	4
G-A	8

G-{DF}	3

# (this is stupid, but it'll work...)
G-DF	3
G-FD	3

G-{SF}	5
G-SF	5
G-FS	5

G-{SD}	6
G-SD	6
G-DSs	6

G-{SDF}	7
G-SDF	7
G-DSF	7
G-DFSs	7
G-FSDd	7
G-FDS	7

# hex extention
G-{AF}	9
G-AF	9
G-FA	9

G-{AD}	A
G-ADd	A
G-DA	A

G-{ADF}	B
G-ADF	B
G-AFD	B
G-DAF	B
G-DFA	B
G-FAD	B
G-FDA	B

G-{AS}	C
G-AS	C
G-SA	C

G-{ASF}	D
G-ASF	D
G-AFS	D
G-SAF	D
G-SFA	D
G-FAS	D
G-FSA	D

G-{ASD}	E
G-ASD	E
G-ADS	E
G-SADd	E
G-SDA	E
G-DAS	E
G-DSA	E

# LOL
G-{ASDF}	F
G-ASDF	F
G-ASFD	F
G-ADSF	F
G-ADFS	F
G-AFSD	F
G-AFDS	F

G-SADF	F
G-SAFD	F
G-SDAF	F
G-SDFA	F
G-SFAD	F
G-SFDA	F

G-DASF	F
G-DAFS	F
G-DSAF	F
G-DSFA	F
G-DFAS	F
G-DFSAF	F

G-FASD	F
G-FADS	F
G-FSAD	F
G-FSDA	F
G-FDAS	F
G-FDSA	F

# calculator!

G-{A_}	+
G-A_	+

G-{S_}	-
G-S_	-

G-{D_}	*
G-D_	*

G-{F_}	/
G-F_	/

G-{AS_}	= # calculate?
G-AS_	=

G-(SD_)	.
G-SD_	.

G-{DF_}	%
G-DF_	%

# missing multiply big dot

## parenthesis
A>D	(
D<A	)
S>F	[
F>S	]
D>G	{
G>D	}
A>F	" # convenient but / ???
F>A	' # convenient but \ ???
S>G	<
G>S	>

## Dots-
D-A	:DELSPC._:NEXTCAP # and with space => :
D-S	:DELSPC,_
D-F	:DELSPC!_:NEXTCAP #                   /
D-G	:DELSPC?_:NEXTCAP #                   \

## Colons- with w space
D-A_	:DELSPC:_
D-S_	:DELSPC;_
D-F_	/ # hmmm, or under (
D-G_	\ #                ) pairing?

## Symbol-
S-A_	:DELSPC@ # At-sign
S-D_	$ # Dollar-sign
S-F_	Â© # f...
S-G_	# # g=Hash

## Fuglies-
F-A_	& # Ampersand
F-S_	% # perSent :-(
F-D_	^ # d=c(eiling)
F-G_	` # g=b(acktick)

## Alternatives-
A-S_	~ # Scuiggly
A-D_	_ # unDerline
#A-F_	  #
A-G_	| # g=b(ar)


# x,,, s, = universal def
#
# ,=not touched
# -=not care
# s=shift
# x=down

# 1=first
# 2=second
# 4=third
# 8=fourth

# 5=1+4=firt+third
# 9=1+8=first+4th
# A=10=2+8=second+forth

# Examples
# x,,, sx == g-_-a == g-a_
# x,,, sx == g-_-a == g-a_
# 1234 ,, == a>s>d>f
# 2,,, ,1 == _>a == q
# 2,,, ,5 == _>a>_ == p (mirror q)



